
Tachometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  00000d9a  00000e2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800084  00800084  00000e52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000eb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019dc  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1f  00000000  00000000  000029f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cd1  00000000  00000000  0000340f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d0  00000000  00000000  000040e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061d  00000000  00000000  000043b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b58  00000000  00000000  000049cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00005525  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 1a 01 	jmp	0x234	; 0x234 <__ctors_end>
   4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
   8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
   c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  10:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  14:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  18:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  1c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  20:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__vector_8>
  24:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  28:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  2c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  30:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  34:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  38:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  3c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  40:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  44:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  48:	0c 94 39 01 	jmp	0x272	; 0x272 <__vector_18>
  4c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  50:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 00       	nop
  56:	00 00       	nop
  58:	00 00       	nop
  5a:	00 5f       	subi	r16, 0xF0	; 240
  5c:	00 00       	nop
  5e:	00 07       	cpc	r16, r16
  60:	00 07       	cpc	r16, r16
  62:	00 14       	cp	r0, r0
  64:	7f 14       	cp	r7, r15
  66:	7f 14       	cp	r7, r15
  68:	24 2a       	or	r2, r20
  6a:	7f 2a       	or	r7, r31
  6c:	12 23       	and	r17, r18
  6e:	13 08       	sbc	r1, r3
  70:	64 62       	ori	r22, 0x24	; 36
  72:	36 49       	sbci	r19, 0x96	; 150
  74:	56 20       	and	r5, r6
  76:	50 08       	sbc	r5, r0
  78:	07 03       	mulsu	r16, r23
  7a:	00 00       	nop
  7c:	00 1c       	adc	r0, r0
  7e:	22 41       	sbci	r18, 0x12	; 18
  80:	00 00       	nop
  82:	41 22       	and	r4, r17
  84:	1c 00       	.word	0x001c	; ????
  86:	14 08       	sbc	r1, r4
  88:	3e 08       	sbc	r3, r14
  8a:	14 08       	sbc	r1, r4
  8c:	08 3e       	cpi	r16, 0xE8	; 232
  8e:	08 08       	sbc	r0, r8
  90:	00 b0       	in	r0, 0x00	; 0
  92:	70 00       	.word	0x0070	; ????
  94:	00 08       	sbc	r0, r0
  96:	08 08       	sbc	r0, r8
  98:	08 08       	sbc	r0, r8
  9a:	00 60       	ori	r16, 0x00	; 0
  9c:	60 00       	.word	0x0060	; ????
  9e:	00 20       	and	r0, r0
  a0:	10 08       	sbc	r1, r0
  a2:	04 02       	muls	r16, r20
  a4:	3e 51       	subi	r19, 0x1E	; 30
  a6:	49 45       	sbci	r20, 0x59	; 89
  a8:	3e 00       	.word	0x003e	; ????
  aa:	42 7f       	andi	r20, 0xF2	; 242
  ac:	40 00       	.word	0x0040	; ????
  ae:	72 49       	sbci	r23, 0x92	; 146
  b0:	49 49       	sbci	r20, 0x99	; 153
  b2:	46 21       	and	r20, r6
  b4:	41 49       	sbci	r20, 0x91	; 145
  b6:	4d 33       	cpi	r20, 0x3D	; 61
  b8:	18 14       	cp	r1, r8
  ba:	12 7f       	andi	r17, 0xF2	; 242
  bc:	10 27       	eor	r17, r16
  be:	45 45       	sbci	r20, 0x55	; 85
  c0:	45 39       	cpi	r20, 0x95	; 149
  c2:	3c 4a       	sbci	r19, 0xAC	; 172
  c4:	49 49       	sbci	r20, 0x99	; 153
  c6:	31 41       	sbci	r19, 0x11	; 17
  c8:	21 11       	cpse	r18, r1
  ca:	09 07       	cpc	r16, r25
  cc:	36 49       	sbci	r19, 0x96	; 150
  ce:	49 49       	sbci	r20, 0x99	; 153
  d0:	36 46       	sbci	r19, 0x66	; 102
  d2:	49 49       	sbci	r20, 0x99	; 153
  d4:	29 1e       	adc	r2, r25
  d6:	00 00       	nop
  d8:	14 00       	.word	0x0014	; ????
  da:	00 00       	nop
  dc:	40 34       	cpi	r20, 0x40	; 64
  de:	00 00       	nop
  e0:	08 14       	cp	r0, r8
  e2:	22 41       	sbci	r18, 0x12	; 18
  e4:	00 14       	cp	r0, r0
  e6:	14 14       	cp	r1, r4
  e8:	14 14       	cp	r1, r4
  ea:	41 22       	and	r4, r17
  ec:	14 08       	sbc	r1, r4
  ee:	00 02       	muls	r16, r16
  f0:	01 59       	subi	r16, 0x91	; 145
  f2:	09 06       	cpc	r0, r25
  f4:	3e 41       	sbci	r19, 0x1E	; 30
  f6:	5d 59       	subi	r21, 0x9D	; 157
  f8:	4e 7c       	andi	r20, 0xCE	; 206
  fa:	12 11       	cpse	r17, r2
  fc:	12 7c       	andi	r17, 0xC2	; 194
  fe:	7f 49       	sbci	r23, 0x9F	; 159
 100:	49 49       	sbci	r20, 0x99	; 153
 102:	36 3e       	cpi	r19, 0xE6	; 230
 104:	41 41       	sbci	r20, 0x11	; 17
 106:	41 22       	and	r4, r17
 108:	7f 41       	sbci	r23, 0x1F	; 31
 10a:	41 41       	sbci	r20, 0x11	; 17
 10c:	3e 7f       	andi	r19, 0xFE	; 254
 10e:	49 49       	sbci	r20, 0x99	; 153
 110:	49 49       	sbci	r20, 0x99	; 153
 112:	7f 09       	sbc	r23, r15
 114:	09 09       	sbc	r16, r9
 116:	09 3e       	cpi	r16, 0xE9	; 233
 118:	41 41       	sbci	r20, 0x11	; 17
 11a:	51 73       	andi	r21, 0x31	; 49
 11c:	7f 08       	sbc	r7, r15
 11e:	08 08       	sbc	r0, r8
 120:	7f 00       	.word	0x007f	; ????
 122:	41 7f       	andi	r20, 0xF1	; 241
 124:	41 00       	.word	0x0041	; ????
 126:	20 40       	sbci	r18, 0x00	; 0
 128:	41 3f       	cpi	r20, 0xF1	; 241
 12a:	01 7f       	andi	r16, 0xF1	; 241
 12c:	08 14       	cp	r0, r8
 12e:	22 41       	sbci	r18, 0x12	; 18
 130:	7f 40       	sbci	r23, 0x0F	; 15
 132:	40 40       	sbci	r20, 0x00	; 0
 134:	40 7f       	andi	r20, 0xF0	; 240
 136:	02 0c       	add	r0, r2
 138:	02 7f       	andi	r16, 0xF2	; 242
 13a:	7f 04       	cpc	r7, r15
 13c:	08 10       	cpse	r0, r8
 13e:	7f 3e       	cpi	r23, 0xEF	; 239
 140:	41 41       	sbci	r20, 0x11	; 17
 142:	41 3e       	cpi	r20, 0xE1	; 225
 144:	7f 09       	sbc	r23, r15
 146:	09 09       	sbc	r16, r9
 148:	06 3e       	cpi	r16, 0xE6	; 230
 14a:	41 51       	subi	r20, 0x11	; 17
 14c:	21 5e       	subi	r18, 0xE1	; 225
 14e:	7f 09       	sbc	r23, r15
 150:	19 29       	or	r17, r9
 152:	46 26       	eor	r4, r22
 154:	49 49       	sbci	r20, 0x99	; 153
 156:	49 32       	cpi	r20, 0x29	; 41
 158:	01 01       	movw	r0, r2
 15a:	7f 01       	movw	r14, r30
 15c:	01 3f       	cpi	r16, 0xF1	; 241
 15e:	40 40       	sbci	r20, 0x00	; 0
 160:	40 3f       	cpi	r20, 0xF0	; 240
 162:	1f 20       	and	r1, r15
 164:	40 20       	and	r4, r0
 166:	1f 3f       	cpi	r17, 0xFF	; 255
 168:	40 38       	cpi	r20, 0x80	; 128
 16a:	40 3f       	cpi	r20, 0xF0	; 240
 16c:	63 14       	cp	r6, r3
 16e:	08 14       	cp	r0, r8
 170:	63 03       	mulsu	r22, r19
 172:	04 78       	andi	r16, 0x84	; 132
 174:	04 03       	mulsu	r16, r20
 176:	61 51       	subi	r22, 0x11	; 17
 178:	49 45       	sbci	r20, 0x59	; 89
 17a:	43 00       	.word	0x0043	; ????
 17c:	7f 41       	sbci	r23, 0x1F	; 31
 17e:	41 00       	.word	0x0041	; ????
 180:	02 04       	cpc	r0, r2
 182:	08 10       	cpse	r0, r8
 184:	20 00       	.word	0x0020	; ????
 186:	41 41       	sbci	r20, 0x11	; 17
 188:	7f 00       	.word	0x007f	; ????
 18a:	04 02       	muls	r16, r20
 18c:	01 02       	muls	r16, r17
 18e:	04 40       	sbci	r16, 0x04	; 4
 190:	40 40       	sbci	r20, 0x00	; 0
 192:	40 40       	sbci	r20, 0x00	; 0
 194:	07 0b       	sbc	r16, r23
 196:	00 00       	nop
 198:	00 20       	and	r0, r0
 19a:	54 54       	subi	r21, 0x44	; 68
 19c:	78 40       	sbci	r23, 0x08	; 8
 19e:	7f 28       	or	r7, r15
 1a0:	44 44       	sbci	r20, 0x44	; 68
 1a2:	38 38       	cpi	r19, 0x88	; 136
 1a4:	44 44       	sbci	r20, 0x44	; 68
 1a6:	44 28       	or	r4, r4
 1a8:	38 44       	sbci	r19, 0x48	; 72
 1aa:	44 28       	or	r4, r4
 1ac:	7f 38       	cpi	r23, 0x8F	; 143
 1ae:	54 54       	subi	r21, 0x44	; 68
 1b0:	54 18       	sub	r5, r4
 1b2:	00 08       	sbc	r0, r0
 1b4:	7e 09       	sbc	r23, r14
 1b6:	02 18       	sub	r0, r2
 1b8:	a4 a4       	ldd	r10, Z+44	; 0x2c
 1ba:	9c 78       	andi	r25, 0x8C	; 140
 1bc:	7f 08       	sbc	r7, r15
 1be:	04 04       	cpc	r0, r4
 1c0:	78 00       	.word	0x0078	; ????
 1c2:	44 7d       	andi	r20, 0xD4	; 212
 1c4:	40 00       	.word	0x0040	; ????
 1c6:	20 40       	sbci	r18, 0x00	; 0
 1c8:	40 3d       	cpi	r20, 0xD0	; 208
 1ca:	00 7f       	andi	r16, 0xF0	; 240
 1cc:	10 28       	or	r1, r0
 1ce:	44 00       	.word	0x0044	; ????
 1d0:	00 41       	sbci	r16, 0x10	; 16
 1d2:	7f 40       	sbci	r23, 0x0F	; 15
 1d4:	00 7c       	andi	r16, 0xC0	; 192
 1d6:	04 78       	andi	r16, 0x84	; 132
 1d8:	04 78       	andi	r16, 0x84	; 132
 1da:	7c 08       	sbc	r7, r12
 1dc:	04 04       	cpc	r0, r4
 1de:	78 38       	cpi	r23, 0x88	; 136
 1e0:	44 44       	sbci	r20, 0x44	; 68
 1e2:	44 38       	cpi	r20, 0x84	; 132
 1e4:	fc 18       	sub	r15, r12
 1e6:	24 24       	eor	r2, r4
 1e8:	18 18       	sub	r1, r8
 1ea:	24 24       	eor	r2, r4
 1ec:	18 fc       	.word	0xfc18	; ????
 1ee:	7c 08       	sbc	r7, r12
 1f0:	04 04       	cpc	r0, r4
 1f2:	08 48       	sbci	r16, 0x88	; 136
 1f4:	54 54       	subi	r21, 0x44	; 68
 1f6:	54 24       	eor	r5, r4
 1f8:	04 04       	cpc	r0, r4
 1fa:	3f 44       	sbci	r19, 0x4F	; 79
 1fc:	24 3c       	cpi	r18, 0xC4	; 196
 1fe:	40 40       	sbci	r20, 0x00	; 0
 200:	20 7c       	andi	r18, 0xC0	; 192
 202:	1c 20       	and	r1, r12
 204:	40 20       	and	r4, r0
 206:	1c 3c       	cpi	r17, 0xCC	; 204
 208:	40 30       	cpi	r20, 0x00	; 0
 20a:	40 3c       	cpi	r20, 0xC0	; 192
 20c:	44 28       	or	r4, r4
 20e:	10 28       	or	r1, r0
 210:	44 4c       	sbci	r20, 0xC4	; 196
 212:	90 90 90 7c 	lds	r9, 0x7C90	; 0x807c90 <__bss_end+0x7c07>
 216:	44 64       	ori	r20, 0x44	; 68
 218:	54 4c       	sbci	r21, 0xC4	; 196
 21a:	44 00       	.word	0x0044	; ????
 21c:	08 36       	cpi	r16, 0x68	; 104
 21e:	41 00       	.word	0x0041	; ????
 220:	00 00       	nop
 222:	77 00       	.word	0x0077	; ????
 224:	00 00       	nop
 226:	41 36       	cpi	r20, 0x61	; 97
 228:	08 00       	.word	0x0008	; ????
 22a:	04 02       	muls	r16, r20
 22c:	04 08       	sbc	r0, r4
 22e:	04 00       	.word	0x0004	; ????
 230:	7f 41       	sbci	r23, 0x1F	; 31
 232:	7f 00       	.word	0x007f	; ????

00000234 <__ctors_end>:
 234:	11 24       	eor	r1, r1
 236:	1f be       	out	0x3f, r1	; 63
 238:	cf e5       	ldi	r28, 0x5F	; 95
 23a:	d4 e0       	ldi	r29, 0x04	; 4
 23c:	de bf       	out	0x3e, r29	; 62
 23e:	cd bf       	out	0x3d, r28	; 61

00000240 <__do_copy_data>:
 240:	10 e0       	ldi	r17, 0x00	; 0
 242:	a0 e6       	ldi	r26, 0x60	; 96
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	ea e9       	ldi	r30, 0x9A	; 154
 248:	fd e0       	ldi	r31, 0x0D	; 13
 24a:	02 c0       	rjmp	.+4      	; 0x250 <__do_copy_data+0x10>
 24c:	05 90       	lpm	r0, Z+
 24e:	0d 92       	st	X+, r0
 250:	a4 38       	cpi	r26, 0x84	; 132
 252:	b1 07       	cpc	r27, r17
 254:	d9 f7       	brne	.-10     	; 0x24c <__do_copy_data+0xc>

00000256 <__do_clear_bss>:
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	a4 e8       	ldi	r26, 0x84	; 132
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	01 c0       	rjmp	.+2      	; 0x260 <.do_clear_bss_start>

0000025e <.do_clear_bss_loop>:
 25e:	1d 92       	st	X+, r1

00000260 <.do_clear_bss_start>:
 260:	a9 38       	cpi	r26, 0x89	; 137
 262:	b2 07       	cpc	r27, r18
 264:	e1 f7       	brne	.-8      	; 0x25e <.do_clear_bss_loop>
 266:	0e 94 7d 01 	call	0x2fa	; 0x2fa <main>
 26a:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <_exit>

0000026e <__bad_interrupt>:
 26e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000272 <__vector_18>:
volatile uint8_t  ovf_count = 0;       // Datenuebergabe: ISR overflow Zaehler

volatile uint8_t  TCN_ovf = 0;         // ISR overflow Zaehler

ISR(INT2_vect)
{
 272:	1f 92       	push	r1
 274:	0f 92       	push	r0
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	0f 92       	push	r0
 27a:	11 24       	eor	r1, r1
 27c:	8f 93       	push	r24
 27e:	9f 93       	push	r25
    // Uebergabe der Messwerte
    stop_count = TCNT1;
 280:	8c b5       	in	r24, 0x2c	; 44
 282:	9d b5       	in	r25, 0x2d	; 45
 284:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <stop_count+0x1>
 288:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <stop_count>
    ovf_count  = TCN_ovf;
 28c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__data_end>
 290:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <ovf_count>

    // Start der neuen Messung
    TCNT1   = 0x0000;
 294:	1d bc       	out	0x2d, r1	; 45
 296:	1c bc       	out	0x2c, r1	; 44
    TCN_ovf = 0;
 298:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__data_end>

    // TOV1 can be cleared by writing a logic one to its bit location
    // TIFR: OCF2 TOV2 ICF1 OCF1A OCF1B TOV1 OCF0 TOV0
    //        ?    ?    ?     ?    ?     1    ?    ?
    TIFR |= (1<<TOV1);
 29c:	88 b7       	in	r24, 0x38	; 56
 29e:	84 60       	ori	r24, 0x04	; 4
 2a0:	88 bf       	out	0x38, r24	; 56
}
 2a2:	9f 91       	pop	r25
 2a4:	8f 91       	pop	r24
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <__vector_8>:

ISR(TIMER1_OVF_vect)    // Timer1 Overflows hochzaehlen
{
 2b0:	1f 92       	push	r1
 2b2:	0f 92       	push	r0
 2b4:	0f b6       	in	r0, 0x3f	; 63
 2b6:	0f 92       	push	r0
 2b8:	11 24       	eor	r1, r1
 2ba:	8f 93       	push	r24
    TCN_ovf++;
 2bc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__data_end>
 2c0:	8f 5f       	subi	r24, 0xFF	; 255
 2c2:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__data_end>
}
 2c6:	8f 91       	pop	r24
 2c8:	0f 90       	pop	r0
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	0f 90       	pop	r0
 2ce:	1f 90       	pop	r1
 2d0:	18 95       	reti

000002d2 <timer_init>:
    // Normal Mode; CH-A no Output; CH-B no Output
    // Pre-Scaler 1/64; Timer1 Overflow-Interrupt
    
    // TCCR1A: COM1A1 COM1A0 COM1B1 COM1B0 FOC1A FOC1B WGM11 WGM10
    //           0      0      0      0      0     0     0     0
    TCCR1A = 0x00;
 2d2:	1f bc       	out	0x2f, r1	; 47
    // TCCR1B: ICNC1 ICES1   –   WGM13 WGM12 CS12 CS11 CS10
    //           0     0     0     0     0     0    1    1
    TCCR1B = (1<<CS10) | (1<<CS11);
 2d4:	83 e0       	ldi	r24, 0x03	; 3
 2d6:	8e bd       	out	0x2e, r24	; 46
    
    // TIMSK: OCIE2 TOIE2 TICIE1 OCIE1A OCIE1B TOIE1 OCIE0 TOIE0
    //          ?     ?     ?      ?      ?      1     ?     ?
    TIMSK |= (1<<TOIE1);
 2d8:	89 b7       	in	r24, 0x39	; 57
 2da:	84 60       	ori	r24, 0x04	; 4
 2dc:	89 bf       	out	0x39, r24	; 57
 2de:	08 95       	ret

000002e0 <interrupt_init>:
}

void interrupt_init (void) // initialisierung des interrupts
{
    DDRB  &= ~(1<<PB2);
 2e0:	87 b3       	in	r24, 0x17	; 23
 2e2:	8b 7f       	andi	r24, 0xFB	; 251
 2e4:	87 bb       	out	0x17, r24	; 23
    PORTB |=  (1<<PB2);     // Port PB2 mit Pullup schalten (notwendig warum?)
 2e6:	88 b3       	in	r24, 0x18	; 24
 2e8:	84 60       	ori	r24, 0x04	; 4
 2ea:	88 bb       	out	0x18, r24	; 24

    // MCUCSR: JTD ISC2  –  JTRF WDRF BORF EXTRF PORF
    //          ?   0    ?   ?    ?    ?    ?     ?
    MCUCSR &= ~(1<<ISC2);
 2ec:	84 b7       	in	r24, 0x34	; 52
 2ee:	8f 7b       	andi	r24, 0xBF	; 191
 2f0:	84 bf       	out	0x34, r24	; 52

    // GICR: INT1 INT0 INT2  –   –   –  IVSEL IVCE
    //         ?    ?    1   ?   ?   ?    ?     ?
    GICR |= (1 << INT2);         // externer Interrupt 2 aktivieren
 2f2:	8b b7       	in	r24, 0x3b	; 59
 2f4:	80 62       	ori	r24, 0x20	; 32
 2f6:	8b bf       	out	0x3b, r24	; 59
 2f8:	08 95       	ret

000002fa <main>:

    uint32_t elapsed_count;
    uint16_t stop_count_l;     // ISR Stop Zaehler
    uint8_t ovf_count_l;       // ISR overflow

    interrupt_init();
 2fa:	0e 94 70 01 	call	0x2e0	; 0x2e0 <interrupt_init>
    timer_init();
 2fe:	0e 94 69 01 	call	0x2d2	; 0x2d2 <timer_init>
    //display_init();  //initialisierung der Anzeige

    sei();           //Alle Interrupts ein
 302:	78 94       	sei

    while (1)
    {
        // Kritischer Abschnitt (Anfang; alle Interrupts aus)
        cli();
 304:	f8 94       	cli
        stop_count_l  = stop_count;   // ISR Stopzeit
 306:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <stop_count>
 30a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <stop_count+0x1>
        ovf_count_l   = ovf_count;    // ISR overflow
 30e:	c0 90 85 00 	lds	r12, 0x0085	; 0x800085 <ovf_count>
        sei();
 312:	78 94       	sei
        //       Zaehlerstand * Frequenzzeit = Zeit für eine Umdrehung (tu)
        //       1/tu = rps * 60 = rpm
        //       km/h = 0.1885 * rpm * dm    (dm = durchmesser reifen)
        
        //Berechnung der Zeit zwischen den Impulsen
        elapsed_count = (uint32_t)stop_count_l + ((uint32_t)ovf_count_l * 65536UL);
 314:	d1 2c       	mov	r13, r1
 316:	e1 2c       	mov	r14, r1
 318:	f1 2c       	mov	r15, r1
 31a:	76 01       	movw	r14, r12
 31c:	dd 24       	eor	r13, r13
 31e:	cc 24       	eor	r12, r12
 320:	c8 0e       	add	r12, r24
 322:	d9 1e       	adc	r13, r25
 324:	e1 1c       	adc	r14, r1
 326:	f1 1c       	adc	r15, r1
        rpm = (60 /(elapsed_count * 5333)) / 100000;          // Berechnung der RPMs
 328:	a5 ed       	ldi	r26, 0xD5	; 213
 32a:	b4 e1       	ldi	r27, 0x14	; 20
 32c:	a7 01       	movw	r20, r14
 32e:	96 01       	movw	r18, r12
 330:	0e 94 a9 03 	call	0x752	; 0x752 <__muluhisi3>
 334:	9b 01       	movw	r18, r22
 336:	ac 01       	movw	r20, r24
 338:	6c e3       	ldi	r22, 0x3C	; 60
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 87 03 	call	0x70e	; 0x70e <__udivmodsi4>
 344:	ca 01       	movw	r24, r20
 346:	b9 01       	movw	r22, r18
 348:	20 ea       	ldi	r18, 0xA0	; 160
 34a:	36 e8       	ldi	r19, 0x86	; 134
 34c:	41 e0       	ldi	r20, 0x01	; 1
 34e:	50 e0       	ldi	r21, 0x00	; 0
 350:	0e 94 87 03 	call	0x70e	; 0x70e <__udivmodsi4>
 354:	c2 2f       	mov	r28, r18
 356:	d3 2f       	mov	r29, r19

        display_clear();                        // Anzeige loeschen
 358:	0e 94 3b 02 	call	0x476	; 0x476 <display_clear>
        display_printf("RPM: %u", rpm);         // Ausgabe am Display
 35c:	df 93       	push	r29
 35e:	cf 93       	push	r28
 360:	85 e6       	ldi	r24, 0x65	; 101
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	9f 93       	push	r25
 366:	8f 93       	push	r24
 368:	0e 94 ba 02 	call	0x574	; 0x574 <display_printf>
        display_printf_pos(0, 1,"elapsed: %u", elapsed_count);
 36c:	ff 92       	push	r15
 36e:	ef 92       	push	r14
 370:	df 92       	push	r13
 372:	cf 92       	push	r12
 374:	8d e6       	ldi	r24, 0x6D	; 109
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	9f 93       	push	r25
 37a:	8f 93       	push	r24
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	8f 93       	push	r24
 380:	1f 92       	push	r1
 382:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <display_printf_pos>
        display_printf_pos(0, 2,"count: %u", stop_count);
 386:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <stop_count>
 38a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <stop_count+0x1>
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	89 e7       	ldi	r24, 0x79	; 121
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	9f 93       	push	r25
 398:	8f 93       	push	r24
 39a:	82 e0       	ldi	r24, 0x02	; 2
 39c:	8f 93       	push	r24
 39e:	1f 92       	push	r1
 3a0:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <display_printf_pos>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3a4:	2f ef       	ldi	r18, 0xFF	; 255
 3a6:	8e e9       	ldi	r24, 0x9E	; 158
 3a8:	94 e2       	ldi	r25, 0x24	; 36
 3aa:	21 50       	subi	r18, 0x01	; 1
 3ac:	80 40       	sbci	r24, 0x00	; 0
 3ae:	90 40       	sbci	r25, 0x00	; 0
 3b0:	e1 f7       	brne	.-8      	; 0x3aa <main+0xb0>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <main+0xba>
 3b4:	00 00       	nop
 3b6:	8d b7       	in	r24, 0x3d	; 61
 3b8:	9e b7       	in	r25, 0x3e	; 62
 3ba:	42 96       	adiw	r24, 0x12	; 18
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	9e bf       	out	0x3e, r25	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	8d bf       	out	0x3d, r24	; 61
 3c6:	9e cf       	rjmp	.-196    	; 0x304 <main+0xa>

000003c8 <display_pos>:
   twi_s_start(OLED_DEV_ADDR);
   OLED_SEND_CMD(0xAF); // Display ON S27
   twi_s_stop();

   // Modullokale Variablen initialisieren
   d_offset = 0;
 3c8:	0f 93       	push	r16
 3ca:	1f 93       	push	r17
 3cc:	cf 93       	push	r28
 3ce:	df 93       	push	r29
 3d0:	08 2f       	mov	r16, r24
 3d2:	d6 2f       	mov	r29, r22
 3d4:	e6 2f       	mov	r30, r22
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	60 91 63 00 	lds	r22, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	80 e4       	ldi	r24, 0x40	; 64
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__divmodhi4>
 3e6:	16 2f       	mov	r17, r22
 3e8:	26 2f       	mov	r18, r22
 3ea:	37 2f       	mov	r19, r23
 3ec:	e2 17       	cp	r30, r18
 3ee:	f3 07       	cpc	r31, r19
 3f0:	ec f5       	brge	.+122    	; 0x46c <__stack+0xd>
 3f2:	e0 2f       	mov	r30, r16
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	a0 e6       	ldi	r26, 0x60	; 96
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	12 96       	adiw	r26, 0x02	; 2
 3fc:	cc 91       	ld	r28, X
 3fe:	12 97       	sbiw	r26, 0x02	; 2
 400:	14 96       	adiw	r26, 0x04	; 4
 402:	4c 91       	ld	r20, X
 404:	64 2f       	mov	r22, r20
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	6c 0f       	add	r22, r28
 40a:	71 1d       	adc	r23, r1
 40c:	80 e8       	ldi	r24, 0x80	; 128
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__divmodhi4>
 414:	e6 17       	cp	r30, r22
 416:	f7 07       	cpc	r31, r23
 418:	4c f5       	brge	.+82     	; 0x46c <__stack+0xd>
 41a:	4c 0f       	add	r20, r28
 41c:	40 9f       	mul	r20, r16
 41e:	c0 2d       	mov	r28, r0
 420:	11 24       	eor	r1, r1
 422:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <d_offset>
 426:	d8 0f       	add	r29, r24
 428:	8d 2f       	mov	r24, r29
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	82 17       	cp	r24, r18
 42e:	93 07       	cpc	r25, r19
 430:	0c f0       	brlt	.+2      	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 432:	d1 1b       	sub	r29, r17
 434:	88 e7       	ldi	r24, 0x78	; 120
 436:	0e 94 5e 03 	call	0x6bc	; 0x6bc <twi_s_start>
 43a:	80 e8       	ldi	r24, 0x80	; 128
 43c:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 440:	8d 2f       	mov	r24, r29
 442:	80 6b       	ori	r24, 0xB0	; 176
 444:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 448:	80 e8       	ldi	r24, 0x80	; 128
 44a:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 44e:	8c 2f       	mov	r24, r28
 450:	8f 70       	andi	r24, 0x0F	; 15
 452:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 456:	80 e8       	ldi	r24, 0x80	; 128
 458:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 45c:	8c 2f       	mov	r24, r28
 45e:	82 95       	swap	r24
 460:	8f 70       	andi	r24, 0x0F	; 15
 462:	80 61       	ori	r24, 0x10	; 16
 464:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 468:	0e 94 0f 03 	call	0x61e	; 0x61e <twi_s_stop>
 46c:	df 91       	pop	r29
 46e:	cf 91       	pop	r28
 470:	1f 91       	pop	r17
 472:	0f 91       	pop	r16
 474:	08 95       	ret

00000476 <display_clear>:
 476:	cf 93       	push	r28
 478:	df 93       	push	r29
 47a:	d0 e0       	ldi	r29, 0x00	; 0
 47c:	15 c0       	rjmp	.+42     	; 0x4a8 <display_clear+0x32>
 47e:	6d 2f       	mov	r22, r29
 480:	80 e0       	ldi	r24, 0x00	; 0
 482:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <display_pos>
 486:	88 e7       	ldi	r24, 0x78	; 120
 488:	0e 94 5e 03 	call	0x6bc	; 0x6bc <twi_s_start>
 48c:	80 e4       	ldi	r24, 0x40	; 64
 48e:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 492:	c0 e0       	ldi	r28, 0x00	; 0
 494:	04 c0       	rjmp	.+8      	; 0x49e <display_clear+0x28>
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
 49c:	cf 5f       	subi	r28, 0xFF	; 255
 49e:	cc 23       	and	r28, r28
 4a0:	d4 f7       	brge	.-12     	; 0x496 <display_clear+0x20>
 4a2:	0e 94 0f 03 	call	0x61e	; 0x61e <twi_s_stop>
 4a6:	df 5f       	subi	r29, 0xFF	; 255
 4a8:	d8 30       	cpi	r29, 0x08	; 8
 4aa:	48 f3       	brcs	.-46     	; 0x47e <display_clear+0x8>
 4ac:	60 e0       	ldi	r22, 0x00	; 0
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <display_pos>
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	08 95       	ret

000004ba <display_char>:
   display_pos(0, 0);
}

// Ausgabe eines Zeichens an der aktuellen Position
void display_char (uint8_t c)
{
 4ba:	ef 92       	push	r14
 4bc:	ff 92       	push	r15
 4be:	1f 93       	push	r17
 4c0:	cf 93       	push	r28
 4c2:	df 93       	push	r29
   uint8_t cnt;
   uint16_t f_index;
   
   // Ungueltige Zeichen abfangen (erstes Zeichen imZeichensatz)
   if ((c < fontParam.char_first) || (c > fontParam.char_last)) 
 4c4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 4c8:	82 17       	cp	r24, r18
 4ca:	28 f0       	brcs	.+10     	; 0x4d6 <display_char+0x1c>
 4cc:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 4d0:	98 17       	cp	r25, r24
 4d2:	18 f0       	brcs	.+6      	; 0x4da <display_char+0x20>
 4d4:	03 c0       	rjmp	.+6      	; 0x4dc <display_char+0x22>
      c = fontParam.char_first;
 4d6:	82 2f       	mov	r24, r18
 4d8:	01 c0       	rjmp	.+2      	; 0x4dc <display_char+0x22>
 4da:	82 2f       	mov	r24, r18
   
   // Index im FontData-Arry berechnen
   f_index = (c - fontParam.char_first) * fontParam.width;
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	82 1b       	sub	r24, r18
 4e0:	91 09       	sbc	r25, r1
 4e2:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 4e6:	28 9f       	mul	r18, r24
 4e8:	e0 01       	movw	r28, r0
 4ea:	29 9f       	mul	r18, r25
 4ec:	d0 0d       	add	r29, r0
 4ee:	11 24       	eor	r1, r1

   // write zero to next GDRAM Position
   twi_s_start(OLED_DEV_ADDR);
 4f0:	88 e7       	ldi	r24, 0x78	; 120
 4f2:	0e 94 5e 03 	call	0x6bc	; 0x6bc <twi_s_start>
   twi_s_write(OLED_CTRL_BYTE_DATA);
 4f6:	80 e4       	ldi	r24, 0x40	; 64
 4f8:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>

   // Display character c at current position
   for (cnt=0; cnt<fontParam.width; cnt++)
 4fc:	10 e0       	ldi	r17, 0x00	; 0
 4fe:	0c c0       	rjmp	.+24     	; 0x518 <display_char+0x5e>
   {
      twi_s_write(pgm_read_byte(&fontData[f_index++]));
 500:	7e 01       	movw	r14, r28
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	e8 1a       	sub	r14, r24
 506:	f8 0a       	sbc	r15, r24
 508:	fe 01       	movw	r30, r28
 50a:	ec 5a       	subi	r30, 0xAC	; 172
 50c:	ff 4f       	sbci	r31, 0xFF	; 255
 50e:	84 91       	lpm	r24, Z
 510:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
   // write zero to next GDRAM Position
   twi_s_start(OLED_DEV_ADDR);
   twi_s_write(OLED_CTRL_BYTE_DATA);

   // Display character c at current position
   for (cnt=0; cnt<fontParam.width; cnt++)
 514:	1f 5f       	subi	r17, 0xFF	; 255
   {
      twi_s_write(pgm_read_byte(&fontData[f_index++]));
 516:	e7 01       	movw	r28, r14
   // write zero to next GDRAM Position
   twi_s_start(OLED_DEV_ADDR);
   twi_s_write(OLED_CTRL_BYTE_DATA);

   // Display character c at current position
   for (cnt=0; cnt<fontParam.width; cnt++)
 518:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 51c:	18 17       	cp	r17, r24
 51e:	80 f3       	brcs	.-32     	; 0x500 <display_char+0x46>
 520:	c0 e0       	ldi	r28, 0x00	; 0
 522:	04 c0       	rjmp	.+8      	; 0x52c <display_char+0x72>
   }

   // Spacing ausgeben
   for (cnt=0; cnt<fontParam.spacing; cnt++)
   {
      twi_s_write(0);
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
   {
      twi_s_write(pgm_read_byte(&fontData[f_index++]));
   }

   // Spacing ausgeben
   for (cnt=0; cnt<fontParam.spacing; cnt++)
 52a:	cf 5f       	subi	r28, 0xFF	; 255
 52c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 530:	c8 17       	cp	r28, r24
 532:	c0 f3       	brcs	.-16     	; 0x524 <display_char+0x6a>
   {
      twi_s_write(0);
   }

   twi_s_stop();
 534:	0e 94 0f 03 	call	0x61e	; 0x61e <twi_s_stop>
}
 538:	df 91       	pop	r29
 53a:	cf 91       	pop	r28
 53c:	1f 91       	pop	r17
 53e:	ff 90       	pop	r15
 540:	ef 90       	pop	r14
 542:	08 95       	ret

00000544 <display_string>:

void display_string (char *line)
{
 544:	cf 93       	push	r28
 546:	df 93       	push	r29
 548:	ec 01       	movw	r28, r24
   while (*line)
 54a:	03 c0       	rjmp	.+6      	; 0x552 <display_string+0xe>
      display_char(*line++);
 54c:	21 96       	adiw	r28, 0x01	; 1
 54e:	0e 94 5d 02 	call	0x4ba	; 0x4ba <display_char>
   twi_s_stop();
}

void display_string (char *line)
{
   while (*line)
 552:	88 81       	ld	r24, Y
 554:	81 11       	cpse	r24, r1
 556:	fa cf       	rjmp	.-12     	; 0x54c <display_string+0x8>
      display_char(*line++);
}
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	08 95       	ret

0000055e <display_string_pos>:

void display_string_pos (uint8_t posx, uint8_t posy, char *line)
{
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	ea 01       	movw	r28, r20
   display_pos(posx, posy); 
 564:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <display_pos>
   display_string(line);
 568:	ce 01       	movw	r24, r28
 56a:	0e 94 a2 02 	call	0x544	; 0x544 <display_string>
}
 56e:	df 91       	pop	r29
 570:	cf 91       	pop	r28
 572:	08 95       	ret

00000574 <display_printf>:

int8_t  display_printf(const char *fmt, ...)
{
 574:	1f 93       	push	r17
 576:	cf 93       	push	r28
 578:	df 93       	push	r29
 57a:	cd b7       	in	r28, 0x3d	; 61
 57c:	de b7       	in	r29, 0x3e	; 62
 57e:	69 97       	sbiw	r28, 0x19	; 25
 580:	0f b6       	in	r0, 0x3f	; 63
 582:	f8 94       	cli
 584:	de bf       	out	0x3e, r29	; 62
 586:	0f be       	out	0x3f, r0	; 63
 588:	cd bf       	out	0x3d, r28	; 61
 58a:	9e 01       	movw	r18, r28
 58c:	21 5e       	subi	r18, 0xE1	; 225
 58e:	3f 4f       	sbci	r19, 0xFF	; 255
 590:	f9 01       	movw	r30, r18
 592:	41 91       	ld	r20, Z+
 594:	51 91       	ld	r21, Z+
 596:	9f 01       	movw	r18, r30
   char buf[25];
   int8_t c_count;

   va_list args;
   va_start(args, fmt);
   c_count = vsnprintf(buf, sizeof buf, fmt, args);
 598:	69 e1       	ldi	r22, 0x19	; 25
 59a:	70 e0       	ldi	r23, 0x00	; 0
 59c:	ce 01       	movw	r24, r28
 59e:	01 96       	adiw	r24, 0x01	; 1
 5a0:	0e 94 d7 03 	call	0x7ae	; 0x7ae <vsnprintf>
 5a4:	18 2f       	mov	r17, r24
   va_end(args);
   
   if (c_count >= 0)
 5a6:	88 23       	and	r24, r24
 5a8:	24 f0       	brlt	.+8      	; 0x5b2 <display_printf+0x3e>
      display_string(buf);
 5aa:	ce 01       	movw	r24, r28
 5ac:	01 96       	adiw	r24, 0x01	; 1
 5ae:	0e 94 a2 02 	call	0x544	; 0x544 <display_string>
   return c_count;
}
 5b2:	81 2f       	mov	r24, r17
 5b4:	69 96       	adiw	r28, 0x19	; 25
 5b6:	0f b6       	in	r0, 0x3f	; 63
 5b8:	f8 94       	cli
 5ba:	de bf       	out	0x3e, r29	; 62
 5bc:	0f be       	out	0x3f, r0	; 63
 5be:	cd bf       	out	0x3d, r28	; 61
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	1f 91       	pop	r17
 5c6:	08 95       	ret

000005c8 <display_printf_pos>:

int8_t display_printf_pos(uint8_t posx, uint8_t posy, const char *fmt, ...)
{
 5c8:	1f 93       	push	r17
 5ca:	cf 93       	push	r28
 5cc:	df 93       	push	r29
 5ce:	cd b7       	in	r28, 0x3d	; 61
 5d0:	de b7       	in	r29, 0x3e	; 62
 5d2:	69 97       	sbiw	r28, 0x19	; 25
 5d4:	0f b6       	in	r0, 0x3f	; 63
 5d6:	f8 94       	cli
 5d8:	de bf       	out	0x3e, r29	; 62
 5da:	0f be       	out	0x3f, r0	; 63
 5dc:	cd bf       	out	0x3d, r28	; 61
   char buf[25];
   int8_t c_count;
   
   va_list args;
   va_start(args, fmt);
   c_count = vsnprintf(buf, sizeof buf, fmt, args);
 5de:	9e 01       	movw	r18, r28
 5e0:	2d 5d       	subi	r18, 0xDD	; 221
 5e2:	3f 4f       	sbci	r19, 0xFF	; 255
 5e4:	49 a1       	ldd	r20, Y+33	; 0x21
 5e6:	5a a1       	ldd	r21, Y+34	; 0x22
 5e8:	69 e1       	ldi	r22, 0x19	; 25
 5ea:	70 e0       	ldi	r23, 0x00	; 0
 5ec:	ce 01       	movw	r24, r28
 5ee:	01 96       	adiw	r24, 0x01	; 1
 5f0:	0e 94 d7 03 	call	0x7ae	; 0x7ae <vsnprintf>
 5f4:	18 2f       	mov	r17, r24
   va_end(args);
   
   if (c_count >= 0)
 5f6:	88 23       	and	r24, r24
 5f8:	3c f0       	brlt	.+14     	; 0x608 <display_printf_pos+0x40>
      display_string_pos(posx, posy, buf);
 5fa:	ae 01       	movw	r20, r28
 5fc:	4f 5f       	subi	r20, 0xFF	; 255
 5fe:	5f 4f       	sbci	r21, 0xFF	; 255
 600:	68 a1       	ldd	r22, Y+32	; 0x20
 602:	8f 8d       	ldd	r24, Y+31	; 0x1f
 604:	0e 94 af 02 	call	0x55e	; 0x55e <display_string_pos>
   return c_count;
}
 608:	81 2f       	mov	r24, r17
 60a:	69 96       	adiw	r28, 0x19	; 25
 60c:	0f b6       	in	r0, 0x3f	; 63
 60e:	f8 94       	cli
 610:	de bf       	out	0x3e, r29	; 62
 612:	0f be       	out	0x3f, r0	; 63
 614:	cd bf       	out	0x3d, r28	; 61
 616:	df 91       	pop	r29
 618:	cf 91       	pop	r28
 61a:	1f 91       	pop	r17
 61c:	08 95       	ret

0000061e <twi_s_stop>:
void twi_s_stop(void)
{
/* SCL ..../''''''
   SDA '\....../''
*/   
   SDA_PSEC;
 61e:	88 b3       	in	r24, 0x18	; 24
 620:	8d 7f       	andi	r24, 0xFD	; 253
 622:	88 bb       	out	0x18, r24	; 24
   SCL_PSEC;
 624:	87 b3       	in	r24, 0x17	; 23
 626:	81 60       	ori	r24, 0x01	; 1
 628:	87 bb       	out	0x17, r24	; 23
   SDA_LOW;  TWI_S_DELAY2();
 62a:	87 b3       	in	r24, 0x17	; 23
 62c:	82 60       	ori	r24, 0x02	; 2
 62e:	87 bb       	out	0x17, r24	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 630:	86 e0       	ldi	r24, 0x06	; 6
 632:	8a 95       	dec	r24
 634:	f1 f7       	brne	.-4      	; 0x632 <twi_s_stop+0x14>
   SCL_HIGH; TWI_S_DELAY2();
 636:	88 b3       	in	r24, 0x18	; 24
 638:	81 60       	ori	r24, 0x01	; 1
 63a:	88 bb       	out	0x18, r24	; 24
 63c:	86 e0       	ldi	r24, 0x06	; 6
 63e:	8a 95       	dec	r24
 640:	f1 f7       	brne	.-4      	; 0x63e <twi_s_stop+0x20>
   SDA_HIGH; TWI_S_DELAY2();
 642:	87 b3       	in	r24, 0x17	; 23
 644:	8d 7f       	andi	r24, 0xFD	; 253
 646:	87 bb       	out	0x17, r24	; 23
 648:	86 e0       	ldi	r24, 0x06	; 6
 64a:	8a 95       	dec	r24
 64c:	f1 f7       	brne	.-4      	; 0x64a <twi_s_stop+0x2c>
 64e:	08 95       	ret

00000650 <twi_s_write>:
uint8_t twi_s_write(uint8_t data)
{
   uint8_t i;
   uint8_t hlp;

   SDA_PSEC;
 650:	98 b3       	in	r25, 0x18	; 24
 652:	9d 7f       	andi	r25, 0xFD	; 253
 654:	98 bb       	out	0x18, r25	; 24
   SCL_PSEC;
 656:	97 b3       	in	r25, 0x17	; 23
 658:	91 60       	ori	r25, 0x01	; 1
 65a:	97 bb       	out	0x17, r25	; 23
  
/* SCL .../'0'\../'1'\../'2'\../'3'\../'4'\../'5'\../'6'\../'7'\../'A\
   SDA 'X======X======X======X======X======X======X======X======/'''''
*/  
   for (i=0;i<8;i++)
 65c:	20 e0       	ldi	r18, 0x00	; 0
 65e:	17 c0       	rjmp	.+46     	; 0x68e <twi_s_write+0x3e>
   {  // 8 Bit ausgeben
      if ((data & (1<<7)) != 0)
 660:	88 23       	and	r24, r24
 662:	24 f4       	brge	.+8      	; 0x66c <twi_s_write+0x1c>
         SDA_HIGH; // wenn Bit gesetzt
 664:	97 b3       	in	r25, 0x17	; 23
 666:	9d 7f       	andi	r25, 0xFD	; 253
 668:	97 bb       	out	0x17, r25	; 23
 66a:	03 c0       	rjmp	.+6      	; 0x672 <twi_s_write+0x22>
      else
         SDA_LOW;  // wenn Bit nicht gesetzt
 66c:	97 b3       	in	r25, 0x17	; 23
 66e:	92 60       	ori	r25, 0x02	; 2
 670:	97 bb       	out	0x17, r25	; 23

      data <<= 1;  // Bit schieben, 7 bis 0
 672:	88 0f       	add	r24, r24
 674:	93 e0       	ldi	r25, 0x03	; 3
 676:	9a 95       	dec	r25
 678:	f1 f7       	brne	.-4      	; 0x676 <twi_s_write+0x26>
      TWI_S_DELAY1();
      SCL_HIGH;
 67a:	98 b3       	in	r25, 0x18	; 24
 67c:	91 60       	ori	r25, 0x01	; 1
 67e:	98 bb       	out	0x18, r25	; 24
 680:	96 e0       	ldi	r25, 0x06	; 6
 682:	9a 95       	dec	r25
 684:	f1 f7       	brne	.-4      	; 0x682 <twi_s_write+0x32>
      TWI_S_DELAY2();
      SCL_LOW;
 686:	98 b3       	in	r25, 0x18	; 24
 688:	9e 7f       	andi	r25, 0xFE	; 254
 68a:	98 bb       	out	0x18, r25	; 24
   SCL_PSEC;
  
/* SCL .../'0'\../'1'\../'2'\../'3'\../'4'\../'5'\../'6'\../'7'\../'A\
   SDA 'X======X======X======X======X======X======X======X======/'''''
*/  
   for (i=0;i<8;i++)
 68c:	2f 5f       	subi	r18, 0xFF	; 255
 68e:	28 30       	cpi	r18, 0x08	; 8
 690:	38 f3       	brcs	.-50     	; 0x660 <twi_s_write+0x10>
      SCL_HIGH;
      TWI_S_DELAY2();
      SCL_LOW;
   }

   SDA_HIGH;
 692:	87 b3       	in	r24, 0x17	; 23
 694:	8d 7f       	andi	r24, 0xFD	; 253
 696:	87 bb       	out	0x17, r24	; 23
 698:	83 e0       	ldi	r24, 0x03	; 3
 69a:	8a 95       	dec	r24
 69c:	f1 f7       	brne	.-4      	; 0x69a <twi_s_write+0x4a>
   TWI_S_DELAY1();
   SCL_HIGH;
 69e:	88 b3       	in	r24, 0x18	; 24
 6a0:	81 60       	ori	r24, 0x01	; 1
 6a2:	88 bb       	out	0x18, r24	; 24
 6a4:	93 e0       	ldi	r25, 0x03	; 3
 6a6:	9a 95       	dec	r25
 6a8:	f1 f7       	brne	.-4      	; 0x6a6 <twi_s_write+0x56>
   TWI_S_DELAY1();

   if (SDA_IN == 0) // Testen SDA auf Acknowledge low
 6aa:	b1 99       	sbic	0x16, 1	; 22
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <twi_s_write+0x62>
      hlp = ACK;    // Flag Ack setzen
 6ae:	81 e0       	ldi	r24, 0x01	; 1
 6b0:	01 c0       	rjmp	.+2      	; 0x6b4 <twi_s_write+0x64>
   else
      hlp = NACK;   // sonst Flag Ack loeschen
 6b2:	80 e0       	ldi	r24, 0x00	; 0

   SCL_LOW;
 6b4:	98 b3       	in	r25, 0x18	; 24
 6b6:	9e 7f       	andi	r25, 0xFE	; 254
 6b8:	98 bb       	out	0x18, r25	; 24
   
   return hlp;
}
 6ba:	08 95       	ret

000006bc <twi_s_start>:
uint8_t twi_s_start(uint8_t address)
{
/* SCL ''''\...
   SDA '\......
*/
   SDA_PSEC;
 6bc:	98 b3       	in	r25, 0x18	; 24
 6be:	9d 7f       	andi	r25, 0xFD	; 253
 6c0:	98 bb       	out	0x18, r25	; 24
   SCL_PSEC;
 6c2:	97 b3       	in	r25, 0x17	; 23
 6c4:	91 60       	ori	r25, 0x01	; 1
 6c6:	97 bb       	out	0x17, r25	; 23
   SDA_LOW; TWI_S_DELAY2();
 6c8:	97 b3       	in	r25, 0x17	; 23
 6ca:	92 60       	ori	r25, 0x02	; 2
 6cc:	97 bb       	out	0x17, r25	; 23
 6ce:	96 e0       	ldi	r25, 0x06	; 6
 6d0:	9a 95       	dec	r25
 6d2:	f1 f7       	brne	.-4      	; 0x6d0 <twi_s_start+0x14>
   SCL_LOW; TWI_S_DELAY2();
 6d4:	98 b3       	in	r25, 0x18	; 24
 6d6:	9e 7f       	andi	r25, 0xFE	; 254
 6d8:	98 bb       	out	0x18, r25	; 24
 6da:	96 e0       	ldi	r25, 0x06	; 6
 6dc:	9a 95       	dec	r25
 6de:	f1 f7       	brne	.-4      	; 0x6dc <twi_s_start+0x20>
   
   return twi_s_write(address);
 6e0:	0e 94 28 03 	call	0x650	; 0x650 <twi_s_write>
}
 6e4:	08 95       	ret

000006e6 <__divmodhi4>:
 6e6:	97 fb       	bst	r25, 7
 6e8:	07 2e       	mov	r0, r23
 6ea:	16 f4       	brtc	.+4      	; 0x6f0 <__divmodhi4+0xa>
 6ec:	00 94       	com	r0
 6ee:	07 d0       	rcall	.+14     	; 0x6fe <__divmodhi4_neg1>
 6f0:	77 fd       	sbrc	r23, 7
 6f2:	09 d0       	rcall	.+18     	; 0x706 <__divmodhi4_neg2>
 6f4:	0e 94 b4 03 	call	0x768	; 0x768 <__udivmodhi4>
 6f8:	07 fc       	sbrc	r0, 7
 6fa:	05 d0       	rcall	.+10     	; 0x706 <__divmodhi4_neg2>
 6fc:	3e f4       	brtc	.+14     	; 0x70c <__divmodhi4_exit>

000006fe <__divmodhi4_neg1>:
 6fe:	90 95       	com	r25
 700:	81 95       	neg	r24
 702:	9f 4f       	sbci	r25, 0xFF	; 255
 704:	08 95       	ret

00000706 <__divmodhi4_neg2>:
 706:	70 95       	com	r23
 708:	61 95       	neg	r22
 70a:	7f 4f       	sbci	r23, 0xFF	; 255

0000070c <__divmodhi4_exit>:
 70c:	08 95       	ret

0000070e <__udivmodsi4>:
 70e:	a1 e2       	ldi	r26, 0x21	; 33
 710:	1a 2e       	mov	r1, r26
 712:	aa 1b       	sub	r26, r26
 714:	bb 1b       	sub	r27, r27
 716:	fd 01       	movw	r30, r26
 718:	0d c0       	rjmp	.+26     	; 0x734 <__udivmodsi4_ep>

0000071a <__udivmodsi4_loop>:
 71a:	aa 1f       	adc	r26, r26
 71c:	bb 1f       	adc	r27, r27
 71e:	ee 1f       	adc	r30, r30
 720:	ff 1f       	adc	r31, r31
 722:	a2 17       	cp	r26, r18
 724:	b3 07       	cpc	r27, r19
 726:	e4 07       	cpc	r30, r20
 728:	f5 07       	cpc	r31, r21
 72a:	20 f0       	brcs	.+8      	; 0x734 <__udivmodsi4_ep>
 72c:	a2 1b       	sub	r26, r18
 72e:	b3 0b       	sbc	r27, r19
 730:	e4 0b       	sbc	r30, r20
 732:	f5 0b       	sbc	r31, r21

00000734 <__udivmodsi4_ep>:
 734:	66 1f       	adc	r22, r22
 736:	77 1f       	adc	r23, r23
 738:	88 1f       	adc	r24, r24
 73a:	99 1f       	adc	r25, r25
 73c:	1a 94       	dec	r1
 73e:	69 f7       	brne	.-38     	; 0x71a <__udivmodsi4_loop>
 740:	60 95       	com	r22
 742:	70 95       	com	r23
 744:	80 95       	com	r24
 746:	90 95       	com	r25
 748:	9b 01       	movw	r18, r22
 74a:	ac 01       	movw	r20, r24
 74c:	bd 01       	movw	r22, r26
 74e:	cf 01       	movw	r24, r30
 750:	08 95       	ret

00000752 <__muluhisi3>:
 752:	0e 94 c8 03 	call	0x790	; 0x790 <__umulhisi3>
 756:	a5 9f       	mul	r26, r21
 758:	90 0d       	add	r25, r0
 75a:	b4 9f       	mul	r27, r20
 75c:	90 0d       	add	r25, r0
 75e:	a4 9f       	mul	r26, r20
 760:	80 0d       	add	r24, r0
 762:	91 1d       	adc	r25, r1
 764:	11 24       	eor	r1, r1
 766:	08 95       	ret

00000768 <__udivmodhi4>:
 768:	aa 1b       	sub	r26, r26
 76a:	bb 1b       	sub	r27, r27
 76c:	51 e1       	ldi	r21, 0x11	; 17
 76e:	07 c0       	rjmp	.+14     	; 0x77e <__udivmodhi4_ep>

00000770 <__udivmodhi4_loop>:
 770:	aa 1f       	adc	r26, r26
 772:	bb 1f       	adc	r27, r27
 774:	a6 17       	cp	r26, r22
 776:	b7 07       	cpc	r27, r23
 778:	10 f0       	brcs	.+4      	; 0x77e <__udivmodhi4_ep>
 77a:	a6 1b       	sub	r26, r22
 77c:	b7 0b       	sbc	r27, r23

0000077e <__udivmodhi4_ep>:
 77e:	88 1f       	adc	r24, r24
 780:	99 1f       	adc	r25, r25
 782:	5a 95       	dec	r21
 784:	a9 f7       	brne	.-22     	; 0x770 <__udivmodhi4_loop>
 786:	80 95       	com	r24
 788:	90 95       	com	r25
 78a:	bc 01       	movw	r22, r24
 78c:	cd 01       	movw	r24, r26
 78e:	08 95       	ret

00000790 <__umulhisi3>:
 790:	a2 9f       	mul	r26, r18
 792:	b0 01       	movw	r22, r0
 794:	b3 9f       	mul	r27, r19
 796:	c0 01       	movw	r24, r0
 798:	a3 9f       	mul	r26, r19
 79a:	70 0d       	add	r23, r0
 79c:	81 1d       	adc	r24, r1
 79e:	11 24       	eor	r1, r1
 7a0:	91 1d       	adc	r25, r1
 7a2:	b2 9f       	mul	r27, r18
 7a4:	70 0d       	add	r23, r0
 7a6:	81 1d       	adc	r24, r1
 7a8:	11 24       	eor	r1, r1
 7aa:	91 1d       	adc	r25, r1
 7ac:	08 95       	ret

000007ae <vsnprintf>:
 7ae:	ae e0       	ldi	r26, 0x0E	; 14
 7b0:	b0 e0       	ldi	r27, 0x00	; 0
 7b2:	ed ed       	ldi	r30, 0xDD	; 221
 7b4:	f3 e0       	ldi	r31, 0x03	; 3
 7b6:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__prologue_saves__+0x1c>
 7ba:	8c 01       	movw	r16, r24
 7bc:	fa 01       	movw	r30, r20
 7be:	86 e0       	ldi	r24, 0x06	; 6
 7c0:	8c 83       	std	Y+4, r24	; 0x04
 7c2:	1a 83       	std	Y+2, r17	; 0x02
 7c4:	09 83       	std	Y+1, r16	; 0x01
 7c6:	77 ff       	sbrs	r23, 7
 7c8:	02 c0       	rjmp	.+4      	; 0x7ce <vsnprintf+0x20>
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	70 e8       	ldi	r23, 0x80	; 128
 7ce:	cb 01       	movw	r24, r22
 7d0:	01 97       	sbiw	r24, 0x01	; 1
 7d2:	9e 83       	std	Y+6, r25	; 0x06
 7d4:	8d 83       	std	Y+5, r24	; 0x05
 7d6:	a9 01       	movw	r20, r18
 7d8:	bf 01       	movw	r22, r30
 7da:	ce 01       	movw	r24, r28
 7dc:	01 96       	adiw	r24, 0x01	; 1
 7de:	0e 94 03 04 	call	0x806	; 0x806 <vfprintf>
 7e2:	4d 81       	ldd	r20, Y+5	; 0x05
 7e4:	5e 81       	ldd	r21, Y+6	; 0x06
 7e6:	57 fd       	sbrc	r21, 7
 7e8:	0a c0       	rjmp	.+20     	; 0x7fe <vsnprintf+0x50>
 7ea:	2f 81       	ldd	r18, Y+7	; 0x07
 7ec:	38 85       	ldd	r19, Y+8	; 0x08
 7ee:	42 17       	cp	r20, r18
 7f0:	53 07       	cpc	r21, r19
 7f2:	0c f4       	brge	.+2      	; 0x7f6 <vsnprintf+0x48>
 7f4:	9a 01       	movw	r18, r20
 7f6:	f8 01       	movw	r30, r16
 7f8:	e2 0f       	add	r30, r18
 7fa:	f3 1f       	adc	r31, r19
 7fc:	10 82       	st	Z, r1
 7fe:	2e 96       	adiw	r28, 0x0e	; 14
 800:	e4 e0       	ldi	r30, 0x04	; 4
 802:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__epilogue_restores__+0x1c>

00000806 <vfprintf>:
 806:	ab e0       	ldi	r26, 0x0B	; 11
 808:	b0 e0       	ldi	r27, 0x00	; 0
 80a:	e9 e0       	ldi	r30, 0x09	; 9
 80c:	f4 e0       	ldi	r31, 0x04	; 4
 80e:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__prologue_saves__>
 812:	6c 01       	movw	r12, r24
 814:	7b 01       	movw	r14, r22
 816:	8a 01       	movw	r16, r20
 818:	fc 01       	movw	r30, r24
 81a:	17 82       	std	Z+7, r1	; 0x07
 81c:	16 82       	std	Z+6, r1	; 0x06
 81e:	83 81       	ldd	r24, Z+3	; 0x03
 820:	81 ff       	sbrs	r24, 1
 822:	cc c1       	rjmp	.+920    	; 0xbbc <vfprintf+0x3b6>
 824:	ce 01       	movw	r24, r28
 826:	01 96       	adiw	r24, 0x01	; 1
 828:	3c 01       	movw	r6, r24
 82a:	f6 01       	movw	r30, r12
 82c:	93 81       	ldd	r25, Z+3	; 0x03
 82e:	f7 01       	movw	r30, r14
 830:	93 fd       	sbrc	r25, 3
 832:	85 91       	lpm	r24, Z+
 834:	93 ff       	sbrs	r25, 3
 836:	81 91       	ld	r24, Z+
 838:	7f 01       	movw	r14, r30
 83a:	88 23       	and	r24, r24
 83c:	09 f4       	brne	.+2      	; 0x840 <vfprintf+0x3a>
 83e:	ba c1       	rjmp	.+884    	; 0xbb4 <vfprintf+0x3ae>
 840:	85 32       	cpi	r24, 0x25	; 37
 842:	39 f4       	brne	.+14     	; 0x852 <vfprintf+0x4c>
 844:	93 fd       	sbrc	r25, 3
 846:	85 91       	lpm	r24, Z+
 848:	93 ff       	sbrs	r25, 3
 84a:	81 91       	ld	r24, Z+
 84c:	7f 01       	movw	r14, r30
 84e:	85 32       	cpi	r24, 0x25	; 37
 850:	29 f4       	brne	.+10     	; 0x85c <vfprintf+0x56>
 852:	b6 01       	movw	r22, r12
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 85a:	e7 cf       	rjmp	.-50     	; 0x82a <vfprintf+0x24>
 85c:	91 2c       	mov	r9, r1
 85e:	21 2c       	mov	r2, r1
 860:	31 2c       	mov	r3, r1
 862:	ff e1       	ldi	r31, 0x1F	; 31
 864:	f3 15       	cp	r31, r3
 866:	d8 f0       	brcs	.+54     	; 0x89e <vfprintf+0x98>
 868:	8b 32       	cpi	r24, 0x2B	; 43
 86a:	79 f0       	breq	.+30     	; 0x88a <vfprintf+0x84>
 86c:	38 f4       	brcc	.+14     	; 0x87c <vfprintf+0x76>
 86e:	80 32       	cpi	r24, 0x20	; 32
 870:	79 f0       	breq	.+30     	; 0x890 <vfprintf+0x8a>
 872:	83 32       	cpi	r24, 0x23	; 35
 874:	a1 f4       	brne	.+40     	; 0x89e <vfprintf+0x98>
 876:	23 2d       	mov	r18, r3
 878:	20 61       	ori	r18, 0x10	; 16
 87a:	1d c0       	rjmp	.+58     	; 0x8b6 <vfprintf+0xb0>
 87c:	8d 32       	cpi	r24, 0x2D	; 45
 87e:	61 f0       	breq	.+24     	; 0x898 <vfprintf+0x92>
 880:	80 33       	cpi	r24, 0x30	; 48
 882:	69 f4       	brne	.+26     	; 0x89e <vfprintf+0x98>
 884:	23 2d       	mov	r18, r3
 886:	21 60       	ori	r18, 0x01	; 1
 888:	16 c0       	rjmp	.+44     	; 0x8b6 <vfprintf+0xb0>
 88a:	83 2d       	mov	r24, r3
 88c:	82 60       	ori	r24, 0x02	; 2
 88e:	38 2e       	mov	r3, r24
 890:	e3 2d       	mov	r30, r3
 892:	e4 60       	ori	r30, 0x04	; 4
 894:	3e 2e       	mov	r3, r30
 896:	2a c0       	rjmp	.+84     	; 0x8ec <vfprintf+0xe6>
 898:	f3 2d       	mov	r31, r3
 89a:	f8 60       	ori	r31, 0x08	; 8
 89c:	1d c0       	rjmp	.+58     	; 0x8d8 <vfprintf+0xd2>
 89e:	37 fc       	sbrc	r3, 7
 8a0:	2d c0       	rjmp	.+90     	; 0x8fc <vfprintf+0xf6>
 8a2:	20 ed       	ldi	r18, 0xD0	; 208
 8a4:	28 0f       	add	r18, r24
 8a6:	2a 30       	cpi	r18, 0x0A	; 10
 8a8:	40 f0       	brcs	.+16     	; 0x8ba <vfprintf+0xb4>
 8aa:	8e 32       	cpi	r24, 0x2E	; 46
 8ac:	b9 f4       	brne	.+46     	; 0x8dc <vfprintf+0xd6>
 8ae:	36 fc       	sbrc	r3, 6
 8b0:	81 c1       	rjmp	.+770    	; 0xbb4 <vfprintf+0x3ae>
 8b2:	23 2d       	mov	r18, r3
 8b4:	20 64       	ori	r18, 0x40	; 64
 8b6:	32 2e       	mov	r3, r18
 8b8:	19 c0       	rjmp	.+50     	; 0x8ec <vfprintf+0xe6>
 8ba:	36 fe       	sbrs	r3, 6
 8bc:	06 c0       	rjmp	.+12     	; 0x8ca <vfprintf+0xc4>
 8be:	8a e0       	ldi	r24, 0x0A	; 10
 8c0:	98 9e       	mul	r9, r24
 8c2:	20 0d       	add	r18, r0
 8c4:	11 24       	eor	r1, r1
 8c6:	92 2e       	mov	r9, r18
 8c8:	11 c0       	rjmp	.+34     	; 0x8ec <vfprintf+0xe6>
 8ca:	ea e0       	ldi	r30, 0x0A	; 10
 8cc:	2e 9e       	mul	r2, r30
 8ce:	20 0d       	add	r18, r0
 8d0:	11 24       	eor	r1, r1
 8d2:	22 2e       	mov	r2, r18
 8d4:	f3 2d       	mov	r31, r3
 8d6:	f0 62       	ori	r31, 0x20	; 32
 8d8:	3f 2e       	mov	r3, r31
 8da:	08 c0       	rjmp	.+16     	; 0x8ec <vfprintf+0xe6>
 8dc:	8c 36       	cpi	r24, 0x6C	; 108
 8de:	21 f4       	brne	.+8      	; 0x8e8 <vfprintf+0xe2>
 8e0:	83 2d       	mov	r24, r3
 8e2:	80 68       	ori	r24, 0x80	; 128
 8e4:	38 2e       	mov	r3, r24
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <vfprintf+0xe6>
 8e8:	88 36       	cpi	r24, 0x68	; 104
 8ea:	41 f4       	brne	.+16     	; 0x8fc <vfprintf+0xf6>
 8ec:	f7 01       	movw	r30, r14
 8ee:	93 fd       	sbrc	r25, 3
 8f0:	85 91       	lpm	r24, Z+
 8f2:	93 ff       	sbrs	r25, 3
 8f4:	81 91       	ld	r24, Z+
 8f6:	7f 01       	movw	r14, r30
 8f8:	81 11       	cpse	r24, r1
 8fa:	b3 cf       	rjmp	.-154    	; 0x862 <vfprintf+0x5c>
 8fc:	98 2f       	mov	r25, r24
 8fe:	9f 7d       	andi	r25, 0xDF	; 223
 900:	95 54       	subi	r25, 0x45	; 69
 902:	93 30       	cpi	r25, 0x03	; 3
 904:	28 f4       	brcc	.+10     	; 0x910 <vfprintf+0x10a>
 906:	0c 5f       	subi	r16, 0xFC	; 252
 908:	1f 4f       	sbci	r17, 0xFF	; 255
 90a:	9f e3       	ldi	r25, 0x3F	; 63
 90c:	99 83       	std	Y+1, r25	; 0x01
 90e:	0d c0       	rjmp	.+26     	; 0x92a <vfprintf+0x124>
 910:	83 36       	cpi	r24, 0x63	; 99
 912:	31 f0       	breq	.+12     	; 0x920 <vfprintf+0x11a>
 914:	83 37       	cpi	r24, 0x73	; 115
 916:	71 f0       	breq	.+28     	; 0x934 <vfprintf+0x12e>
 918:	83 35       	cpi	r24, 0x53	; 83
 91a:	09 f0       	breq	.+2      	; 0x91e <vfprintf+0x118>
 91c:	59 c0       	rjmp	.+178    	; 0x9d0 <vfprintf+0x1ca>
 91e:	21 c0       	rjmp	.+66     	; 0x962 <vfprintf+0x15c>
 920:	f8 01       	movw	r30, r16
 922:	80 81       	ld	r24, Z
 924:	89 83       	std	Y+1, r24	; 0x01
 926:	0e 5f       	subi	r16, 0xFE	; 254
 928:	1f 4f       	sbci	r17, 0xFF	; 255
 92a:	88 24       	eor	r8, r8
 92c:	83 94       	inc	r8
 92e:	91 2c       	mov	r9, r1
 930:	53 01       	movw	r10, r6
 932:	13 c0       	rjmp	.+38     	; 0x95a <vfprintf+0x154>
 934:	28 01       	movw	r4, r16
 936:	f2 e0       	ldi	r31, 0x02	; 2
 938:	4f 0e       	add	r4, r31
 93a:	51 1c       	adc	r5, r1
 93c:	f8 01       	movw	r30, r16
 93e:	a0 80       	ld	r10, Z
 940:	b1 80       	ldd	r11, Z+1	; 0x01
 942:	36 fe       	sbrs	r3, 6
 944:	03 c0       	rjmp	.+6      	; 0x94c <vfprintf+0x146>
 946:	69 2d       	mov	r22, r9
 948:	70 e0       	ldi	r23, 0x00	; 0
 94a:	02 c0       	rjmp	.+4      	; 0x950 <vfprintf+0x14a>
 94c:	6f ef       	ldi	r22, 0xFF	; 255
 94e:	7f ef       	ldi	r23, 0xFF	; 255
 950:	c5 01       	movw	r24, r10
 952:	0e 94 ef 05 	call	0xbde	; 0xbde <strnlen>
 956:	4c 01       	movw	r8, r24
 958:	82 01       	movw	r16, r4
 95a:	f3 2d       	mov	r31, r3
 95c:	ff 77       	andi	r31, 0x7F	; 127
 95e:	3f 2e       	mov	r3, r31
 960:	16 c0       	rjmp	.+44     	; 0x98e <vfprintf+0x188>
 962:	28 01       	movw	r4, r16
 964:	22 e0       	ldi	r18, 0x02	; 2
 966:	42 0e       	add	r4, r18
 968:	51 1c       	adc	r5, r1
 96a:	f8 01       	movw	r30, r16
 96c:	a0 80       	ld	r10, Z
 96e:	b1 80       	ldd	r11, Z+1	; 0x01
 970:	36 fe       	sbrs	r3, 6
 972:	03 c0       	rjmp	.+6      	; 0x97a <vfprintf+0x174>
 974:	69 2d       	mov	r22, r9
 976:	70 e0       	ldi	r23, 0x00	; 0
 978:	02 c0       	rjmp	.+4      	; 0x97e <vfprintf+0x178>
 97a:	6f ef       	ldi	r22, 0xFF	; 255
 97c:	7f ef       	ldi	r23, 0xFF	; 255
 97e:	c5 01       	movw	r24, r10
 980:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <strnlen_P>
 984:	4c 01       	movw	r8, r24
 986:	f3 2d       	mov	r31, r3
 988:	f0 68       	ori	r31, 0x80	; 128
 98a:	3f 2e       	mov	r3, r31
 98c:	82 01       	movw	r16, r4
 98e:	33 fc       	sbrc	r3, 3
 990:	1b c0       	rjmp	.+54     	; 0x9c8 <vfprintf+0x1c2>
 992:	82 2d       	mov	r24, r2
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	88 16       	cp	r8, r24
 998:	99 06       	cpc	r9, r25
 99a:	b0 f4       	brcc	.+44     	; 0x9c8 <vfprintf+0x1c2>
 99c:	b6 01       	movw	r22, r12
 99e:	80 e2       	ldi	r24, 0x20	; 32
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 9a6:	2a 94       	dec	r2
 9a8:	f4 cf       	rjmp	.-24     	; 0x992 <vfprintf+0x18c>
 9aa:	f5 01       	movw	r30, r10
 9ac:	37 fc       	sbrc	r3, 7
 9ae:	85 91       	lpm	r24, Z+
 9b0:	37 fe       	sbrs	r3, 7
 9b2:	81 91       	ld	r24, Z+
 9b4:	5f 01       	movw	r10, r30
 9b6:	b6 01       	movw	r22, r12
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 9be:	21 10       	cpse	r2, r1
 9c0:	2a 94       	dec	r2
 9c2:	21 e0       	ldi	r18, 0x01	; 1
 9c4:	82 1a       	sub	r8, r18
 9c6:	91 08       	sbc	r9, r1
 9c8:	81 14       	cp	r8, r1
 9ca:	91 04       	cpc	r9, r1
 9cc:	71 f7       	brne	.-36     	; 0x9aa <vfprintf+0x1a4>
 9ce:	e8 c0       	rjmp	.+464    	; 0xba0 <vfprintf+0x39a>
 9d0:	84 36       	cpi	r24, 0x64	; 100
 9d2:	11 f0       	breq	.+4      	; 0x9d8 <vfprintf+0x1d2>
 9d4:	89 36       	cpi	r24, 0x69	; 105
 9d6:	41 f5       	brne	.+80     	; 0xa28 <vfprintf+0x222>
 9d8:	f8 01       	movw	r30, r16
 9da:	37 fe       	sbrs	r3, 7
 9dc:	07 c0       	rjmp	.+14     	; 0x9ec <vfprintf+0x1e6>
 9de:	60 81       	ld	r22, Z
 9e0:	71 81       	ldd	r23, Z+1	; 0x01
 9e2:	82 81       	ldd	r24, Z+2	; 0x02
 9e4:	93 81       	ldd	r25, Z+3	; 0x03
 9e6:	0c 5f       	subi	r16, 0xFC	; 252
 9e8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ea:	08 c0       	rjmp	.+16     	; 0x9fc <vfprintf+0x1f6>
 9ec:	60 81       	ld	r22, Z
 9ee:	71 81       	ldd	r23, Z+1	; 0x01
 9f0:	07 2e       	mov	r0, r23
 9f2:	00 0c       	add	r0, r0
 9f4:	88 0b       	sbc	r24, r24
 9f6:	99 0b       	sbc	r25, r25
 9f8:	0e 5f       	subi	r16, 0xFE	; 254
 9fa:	1f 4f       	sbci	r17, 0xFF	; 255
 9fc:	f3 2d       	mov	r31, r3
 9fe:	ff 76       	andi	r31, 0x6F	; 111
 a00:	3f 2e       	mov	r3, r31
 a02:	97 ff       	sbrs	r25, 7
 a04:	09 c0       	rjmp	.+18     	; 0xa18 <vfprintf+0x212>
 a06:	90 95       	com	r25
 a08:	80 95       	com	r24
 a0a:	70 95       	com	r23
 a0c:	61 95       	neg	r22
 a0e:	7f 4f       	sbci	r23, 0xFF	; 255
 a10:	8f 4f       	sbci	r24, 0xFF	; 255
 a12:	9f 4f       	sbci	r25, 0xFF	; 255
 a14:	f0 68       	ori	r31, 0x80	; 128
 a16:	3f 2e       	mov	r3, r31
 a18:	2a e0       	ldi	r18, 0x0A	; 10
 a1a:	30 e0       	ldi	r19, 0x00	; 0
 a1c:	a3 01       	movw	r20, r6
 a1e:	0e 94 36 06 	call	0xc6c	; 0xc6c <__ultoa_invert>
 a22:	88 2e       	mov	r8, r24
 a24:	86 18       	sub	r8, r6
 a26:	45 c0       	rjmp	.+138    	; 0xab2 <vfprintf+0x2ac>
 a28:	85 37       	cpi	r24, 0x75	; 117
 a2a:	31 f4       	brne	.+12     	; 0xa38 <vfprintf+0x232>
 a2c:	23 2d       	mov	r18, r3
 a2e:	2f 7e       	andi	r18, 0xEF	; 239
 a30:	b2 2e       	mov	r11, r18
 a32:	2a e0       	ldi	r18, 0x0A	; 10
 a34:	30 e0       	ldi	r19, 0x00	; 0
 a36:	25 c0       	rjmp	.+74     	; 0xa82 <vfprintf+0x27c>
 a38:	93 2d       	mov	r25, r3
 a3a:	99 7f       	andi	r25, 0xF9	; 249
 a3c:	b9 2e       	mov	r11, r25
 a3e:	8f 36       	cpi	r24, 0x6F	; 111
 a40:	c1 f0       	breq	.+48     	; 0xa72 <vfprintf+0x26c>
 a42:	18 f4       	brcc	.+6      	; 0xa4a <vfprintf+0x244>
 a44:	88 35       	cpi	r24, 0x58	; 88
 a46:	79 f0       	breq	.+30     	; 0xa66 <vfprintf+0x260>
 a48:	b5 c0       	rjmp	.+362    	; 0xbb4 <vfprintf+0x3ae>
 a4a:	80 37       	cpi	r24, 0x70	; 112
 a4c:	19 f0       	breq	.+6      	; 0xa54 <vfprintf+0x24e>
 a4e:	88 37       	cpi	r24, 0x78	; 120
 a50:	21 f0       	breq	.+8      	; 0xa5a <vfprintf+0x254>
 a52:	b0 c0       	rjmp	.+352    	; 0xbb4 <vfprintf+0x3ae>
 a54:	e9 2f       	mov	r30, r25
 a56:	e0 61       	ori	r30, 0x10	; 16
 a58:	be 2e       	mov	r11, r30
 a5a:	b4 fe       	sbrs	r11, 4
 a5c:	0d c0       	rjmp	.+26     	; 0xa78 <vfprintf+0x272>
 a5e:	fb 2d       	mov	r31, r11
 a60:	f4 60       	ori	r31, 0x04	; 4
 a62:	bf 2e       	mov	r11, r31
 a64:	09 c0       	rjmp	.+18     	; 0xa78 <vfprintf+0x272>
 a66:	34 fe       	sbrs	r3, 4
 a68:	0a c0       	rjmp	.+20     	; 0xa7e <vfprintf+0x278>
 a6a:	29 2f       	mov	r18, r25
 a6c:	26 60       	ori	r18, 0x06	; 6
 a6e:	b2 2e       	mov	r11, r18
 a70:	06 c0       	rjmp	.+12     	; 0xa7e <vfprintf+0x278>
 a72:	28 e0       	ldi	r18, 0x08	; 8
 a74:	30 e0       	ldi	r19, 0x00	; 0
 a76:	05 c0       	rjmp	.+10     	; 0xa82 <vfprintf+0x27c>
 a78:	20 e1       	ldi	r18, 0x10	; 16
 a7a:	30 e0       	ldi	r19, 0x00	; 0
 a7c:	02 c0       	rjmp	.+4      	; 0xa82 <vfprintf+0x27c>
 a7e:	20 e1       	ldi	r18, 0x10	; 16
 a80:	32 e0       	ldi	r19, 0x02	; 2
 a82:	f8 01       	movw	r30, r16
 a84:	b7 fe       	sbrs	r11, 7
 a86:	07 c0       	rjmp	.+14     	; 0xa96 <vfprintf+0x290>
 a88:	60 81       	ld	r22, Z
 a8a:	71 81       	ldd	r23, Z+1	; 0x01
 a8c:	82 81       	ldd	r24, Z+2	; 0x02
 a8e:	93 81       	ldd	r25, Z+3	; 0x03
 a90:	0c 5f       	subi	r16, 0xFC	; 252
 a92:	1f 4f       	sbci	r17, 0xFF	; 255
 a94:	06 c0       	rjmp	.+12     	; 0xaa2 <vfprintf+0x29c>
 a96:	60 81       	ld	r22, Z
 a98:	71 81       	ldd	r23, Z+1	; 0x01
 a9a:	80 e0       	ldi	r24, 0x00	; 0
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	0e 5f       	subi	r16, 0xFE	; 254
 aa0:	1f 4f       	sbci	r17, 0xFF	; 255
 aa2:	a3 01       	movw	r20, r6
 aa4:	0e 94 36 06 	call	0xc6c	; 0xc6c <__ultoa_invert>
 aa8:	88 2e       	mov	r8, r24
 aaa:	86 18       	sub	r8, r6
 aac:	fb 2d       	mov	r31, r11
 aae:	ff 77       	andi	r31, 0x7F	; 127
 ab0:	3f 2e       	mov	r3, r31
 ab2:	36 fe       	sbrs	r3, 6
 ab4:	0d c0       	rjmp	.+26     	; 0xad0 <vfprintf+0x2ca>
 ab6:	23 2d       	mov	r18, r3
 ab8:	2e 7f       	andi	r18, 0xFE	; 254
 aba:	a2 2e       	mov	r10, r18
 abc:	89 14       	cp	r8, r9
 abe:	58 f4       	brcc	.+22     	; 0xad6 <vfprintf+0x2d0>
 ac0:	34 fe       	sbrs	r3, 4
 ac2:	0b c0       	rjmp	.+22     	; 0xada <vfprintf+0x2d4>
 ac4:	32 fc       	sbrc	r3, 2
 ac6:	09 c0       	rjmp	.+18     	; 0xada <vfprintf+0x2d4>
 ac8:	83 2d       	mov	r24, r3
 aca:	8e 7e       	andi	r24, 0xEE	; 238
 acc:	a8 2e       	mov	r10, r24
 ace:	05 c0       	rjmp	.+10     	; 0xada <vfprintf+0x2d4>
 ad0:	b8 2c       	mov	r11, r8
 ad2:	a3 2c       	mov	r10, r3
 ad4:	03 c0       	rjmp	.+6      	; 0xadc <vfprintf+0x2d6>
 ad6:	b8 2c       	mov	r11, r8
 ad8:	01 c0       	rjmp	.+2      	; 0xadc <vfprintf+0x2d6>
 ada:	b9 2c       	mov	r11, r9
 adc:	a4 fe       	sbrs	r10, 4
 ade:	0f c0       	rjmp	.+30     	; 0xafe <vfprintf+0x2f8>
 ae0:	fe 01       	movw	r30, r28
 ae2:	e8 0d       	add	r30, r8
 ae4:	f1 1d       	adc	r31, r1
 ae6:	80 81       	ld	r24, Z
 ae8:	80 33       	cpi	r24, 0x30	; 48
 aea:	21 f4       	brne	.+8      	; 0xaf4 <vfprintf+0x2ee>
 aec:	9a 2d       	mov	r25, r10
 aee:	99 7e       	andi	r25, 0xE9	; 233
 af0:	a9 2e       	mov	r10, r25
 af2:	09 c0       	rjmp	.+18     	; 0xb06 <vfprintf+0x300>
 af4:	a2 fe       	sbrs	r10, 2
 af6:	06 c0       	rjmp	.+12     	; 0xb04 <vfprintf+0x2fe>
 af8:	b3 94       	inc	r11
 afa:	b3 94       	inc	r11
 afc:	04 c0       	rjmp	.+8      	; 0xb06 <vfprintf+0x300>
 afe:	8a 2d       	mov	r24, r10
 b00:	86 78       	andi	r24, 0x86	; 134
 b02:	09 f0       	breq	.+2      	; 0xb06 <vfprintf+0x300>
 b04:	b3 94       	inc	r11
 b06:	a3 fc       	sbrc	r10, 3
 b08:	11 c0       	rjmp	.+34     	; 0xb2c <vfprintf+0x326>
 b0a:	a0 fe       	sbrs	r10, 0
 b0c:	06 c0       	rjmp	.+12     	; 0xb1a <vfprintf+0x314>
 b0e:	b2 14       	cp	r11, r2
 b10:	88 f4       	brcc	.+34     	; 0xb34 <vfprintf+0x32e>
 b12:	28 0c       	add	r2, r8
 b14:	92 2c       	mov	r9, r2
 b16:	9b 18       	sub	r9, r11
 b18:	0e c0       	rjmp	.+28     	; 0xb36 <vfprintf+0x330>
 b1a:	b2 14       	cp	r11, r2
 b1c:	60 f4       	brcc	.+24     	; 0xb36 <vfprintf+0x330>
 b1e:	b6 01       	movw	r22, r12
 b20:	80 e2       	ldi	r24, 0x20	; 32
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 b28:	b3 94       	inc	r11
 b2a:	f7 cf       	rjmp	.-18     	; 0xb1a <vfprintf+0x314>
 b2c:	b2 14       	cp	r11, r2
 b2e:	18 f4       	brcc	.+6      	; 0xb36 <vfprintf+0x330>
 b30:	2b 18       	sub	r2, r11
 b32:	02 c0       	rjmp	.+4      	; 0xb38 <vfprintf+0x332>
 b34:	98 2c       	mov	r9, r8
 b36:	21 2c       	mov	r2, r1
 b38:	a4 fe       	sbrs	r10, 4
 b3a:	10 c0       	rjmp	.+32     	; 0xb5c <vfprintf+0x356>
 b3c:	b6 01       	movw	r22, r12
 b3e:	80 e3       	ldi	r24, 0x30	; 48
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 b46:	a2 fe       	sbrs	r10, 2
 b48:	17 c0       	rjmp	.+46     	; 0xb78 <vfprintf+0x372>
 b4a:	a1 fc       	sbrc	r10, 1
 b4c:	03 c0       	rjmp	.+6      	; 0xb54 <vfprintf+0x34e>
 b4e:	88 e7       	ldi	r24, 0x78	; 120
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	02 c0       	rjmp	.+4      	; 0xb58 <vfprintf+0x352>
 b54:	88 e5       	ldi	r24, 0x58	; 88
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	b6 01       	movw	r22, r12
 b5a:	0c c0       	rjmp	.+24     	; 0xb74 <vfprintf+0x36e>
 b5c:	8a 2d       	mov	r24, r10
 b5e:	86 78       	andi	r24, 0x86	; 134
 b60:	59 f0       	breq	.+22     	; 0xb78 <vfprintf+0x372>
 b62:	a1 fe       	sbrs	r10, 1
 b64:	02 c0       	rjmp	.+4      	; 0xb6a <vfprintf+0x364>
 b66:	8b e2       	ldi	r24, 0x2B	; 43
 b68:	01 c0       	rjmp	.+2      	; 0xb6c <vfprintf+0x366>
 b6a:	80 e2       	ldi	r24, 0x20	; 32
 b6c:	a7 fc       	sbrc	r10, 7
 b6e:	8d e2       	ldi	r24, 0x2D	; 45
 b70:	b6 01       	movw	r22, r12
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 b78:	89 14       	cp	r8, r9
 b7a:	38 f4       	brcc	.+14     	; 0xb8a <vfprintf+0x384>
 b7c:	b6 01       	movw	r22, r12
 b7e:	80 e3       	ldi	r24, 0x30	; 48
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 b86:	9a 94       	dec	r9
 b88:	f7 cf       	rjmp	.-18     	; 0xb78 <vfprintf+0x372>
 b8a:	8a 94       	dec	r8
 b8c:	f3 01       	movw	r30, r6
 b8e:	e8 0d       	add	r30, r8
 b90:	f1 1d       	adc	r31, r1
 b92:	80 81       	ld	r24, Z
 b94:	b6 01       	movw	r22, r12
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 b9c:	81 10       	cpse	r8, r1
 b9e:	f5 cf       	rjmp	.-22     	; 0xb8a <vfprintf+0x384>
 ba0:	22 20       	and	r2, r2
 ba2:	09 f4       	brne	.+2      	; 0xba6 <vfprintf+0x3a0>
 ba4:	42 ce       	rjmp	.-892    	; 0x82a <vfprintf+0x24>
 ba6:	b6 01       	movw	r22, r12
 ba8:	80 e2       	ldi	r24, 0x20	; 32
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <fputc>
 bb0:	2a 94       	dec	r2
 bb2:	f6 cf       	rjmp	.-20     	; 0xba0 <vfprintf+0x39a>
 bb4:	f6 01       	movw	r30, r12
 bb6:	86 81       	ldd	r24, Z+6	; 0x06
 bb8:	97 81       	ldd	r25, Z+7	; 0x07
 bba:	02 c0       	rjmp	.+4      	; 0xbc0 <vfprintf+0x3ba>
 bbc:	8f ef       	ldi	r24, 0xFF	; 255
 bbe:	9f ef       	ldi	r25, 0xFF	; 255
 bc0:	2b 96       	adiw	r28, 0x0b	; 11
 bc2:	e2 e1       	ldi	r30, 0x12	; 18
 bc4:	0c 94 b0 06 	jmp	0xd60	; 0xd60 <__epilogue_restores__>

00000bc8 <strnlen_P>:
 bc8:	fc 01       	movw	r30, r24
 bca:	05 90       	lpm	r0, Z+
 bcc:	61 50       	subi	r22, 0x01	; 1
 bce:	70 40       	sbci	r23, 0x00	; 0
 bd0:	01 10       	cpse	r0, r1
 bd2:	d8 f7       	brcc	.-10     	; 0xbca <strnlen_P+0x2>
 bd4:	80 95       	com	r24
 bd6:	90 95       	com	r25
 bd8:	8e 0f       	add	r24, r30
 bda:	9f 1f       	adc	r25, r31
 bdc:	08 95       	ret

00000bde <strnlen>:
 bde:	fc 01       	movw	r30, r24
 be0:	61 50       	subi	r22, 0x01	; 1
 be2:	70 40       	sbci	r23, 0x00	; 0
 be4:	01 90       	ld	r0, Z+
 be6:	01 10       	cpse	r0, r1
 be8:	d8 f7       	brcc	.-10     	; 0xbe0 <strnlen+0x2>
 bea:	80 95       	com	r24
 bec:	90 95       	com	r25
 bee:	8e 0f       	add	r24, r30
 bf0:	9f 1f       	adc	r25, r31
 bf2:	08 95       	ret

00000bf4 <fputc>:
 bf4:	0f 93       	push	r16
 bf6:	1f 93       	push	r17
 bf8:	cf 93       	push	r28
 bfa:	df 93       	push	r29
 bfc:	fb 01       	movw	r30, r22
 bfe:	23 81       	ldd	r18, Z+3	; 0x03
 c00:	21 fd       	sbrc	r18, 1
 c02:	03 c0       	rjmp	.+6      	; 0xc0a <fputc+0x16>
 c04:	8f ef       	ldi	r24, 0xFF	; 255
 c06:	9f ef       	ldi	r25, 0xFF	; 255
 c08:	2c c0       	rjmp	.+88     	; 0xc62 <fputc+0x6e>
 c0a:	22 ff       	sbrs	r18, 2
 c0c:	16 c0       	rjmp	.+44     	; 0xc3a <fputc+0x46>
 c0e:	46 81       	ldd	r20, Z+6	; 0x06
 c10:	57 81       	ldd	r21, Z+7	; 0x07
 c12:	24 81       	ldd	r18, Z+4	; 0x04
 c14:	35 81       	ldd	r19, Z+5	; 0x05
 c16:	42 17       	cp	r20, r18
 c18:	53 07       	cpc	r21, r19
 c1a:	44 f4       	brge	.+16     	; 0xc2c <fputc+0x38>
 c1c:	a0 81       	ld	r26, Z
 c1e:	b1 81       	ldd	r27, Z+1	; 0x01
 c20:	9d 01       	movw	r18, r26
 c22:	2f 5f       	subi	r18, 0xFF	; 255
 c24:	3f 4f       	sbci	r19, 0xFF	; 255
 c26:	31 83       	std	Z+1, r19	; 0x01
 c28:	20 83       	st	Z, r18
 c2a:	8c 93       	st	X, r24
 c2c:	26 81       	ldd	r18, Z+6	; 0x06
 c2e:	37 81       	ldd	r19, Z+7	; 0x07
 c30:	2f 5f       	subi	r18, 0xFF	; 255
 c32:	3f 4f       	sbci	r19, 0xFF	; 255
 c34:	37 83       	std	Z+7, r19	; 0x07
 c36:	26 83       	std	Z+6, r18	; 0x06
 c38:	14 c0       	rjmp	.+40     	; 0xc62 <fputc+0x6e>
 c3a:	8b 01       	movw	r16, r22
 c3c:	ec 01       	movw	r28, r24
 c3e:	fb 01       	movw	r30, r22
 c40:	00 84       	ldd	r0, Z+8	; 0x08
 c42:	f1 85       	ldd	r31, Z+9	; 0x09
 c44:	e0 2d       	mov	r30, r0
 c46:	09 95       	icall
 c48:	89 2b       	or	r24, r25
 c4a:	e1 f6       	brne	.-72     	; 0xc04 <fputc+0x10>
 c4c:	d8 01       	movw	r26, r16
 c4e:	16 96       	adiw	r26, 0x06	; 6
 c50:	8d 91       	ld	r24, X+
 c52:	9c 91       	ld	r25, X
 c54:	17 97       	sbiw	r26, 0x07	; 7
 c56:	01 96       	adiw	r24, 0x01	; 1
 c58:	17 96       	adiw	r26, 0x07	; 7
 c5a:	9c 93       	st	X, r25
 c5c:	8e 93       	st	-X, r24
 c5e:	16 97       	sbiw	r26, 0x06	; 6
 c60:	ce 01       	movw	r24, r28
 c62:	df 91       	pop	r29
 c64:	cf 91       	pop	r28
 c66:	1f 91       	pop	r17
 c68:	0f 91       	pop	r16
 c6a:	08 95       	ret

00000c6c <__ultoa_invert>:
 c6c:	fa 01       	movw	r30, r20
 c6e:	aa 27       	eor	r26, r26
 c70:	28 30       	cpi	r18, 0x08	; 8
 c72:	51 f1       	breq	.+84     	; 0xcc8 <__ultoa_invert+0x5c>
 c74:	20 31       	cpi	r18, 0x10	; 16
 c76:	81 f1       	breq	.+96     	; 0xcd8 <__ultoa_invert+0x6c>
 c78:	e8 94       	clt
 c7a:	6f 93       	push	r22
 c7c:	6e 7f       	andi	r22, 0xFE	; 254
 c7e:	6e 5f       	subi	r22, 0xFE	; 254
 c80:	7f 4f       	sbci	r23, 0xFF	; 255
 c82:	8f 4f       	sbci	r24, 0xFF	; 255
 c84:	9f 4f       	sbci	r25, 0xFF	; 255
 c86:	af 4f       	sbci	r26, 0xFF	; 255
 c88:	b1 e0       	ldi	r27, 0x01	; 1
 c8a:	3e d0       	rcall	.+124    	; 0xd08 <__ultoa_invert+0x9c>
 c8c:	b4 e0       	ldi	r27, 0x04	; 4
 c8e:	3c d0       	rcall	.+120    	; 0xd08 <__ultoa_invert+0x9c>
 c90:	67 0f       	add	r22, r23
 c92:	78 1f       	adc	r23, r24
 c94:	89 1f       	adc	r24, r25
 c96:	9a 1f       	adc	r25, r26
 c98:	a1 1d       	adc	r26, r1
 c9a:	68 0f       	add	r22, r24
 c9c:	79 1f       	adc	r23, r25
 c9e:	8a 1f       	adc	r24, r26
 ca0:	91 1d       	adc	r25, r1
 ca2:	a1 1d       	adc	r26, r1
 ca4:	6a 0f       	add	r22, r26
 ca6:	71 1d       	adc	r23, r1
 ca8:	81 1d       	adc	r24, r1
 caa:	91 1d       	adc	r25, r1
 cac:	a1 1d       	adc	r26, r1
 cae:	20 d0       	rcall	.+64     	; 0xcf0 <__ultoa_invert+0x84>
 cb0:	09 f4       	brne	.+2      	; 0xcb4 <__ultoa_invert+0x48>
 cb2:	68 94       	set
 cb4:	3f 91       	pop	r19
 cb6:	2a e0       	ldi	r18, 0x0A	; 10
 cb8:	26 9f       	mul	r18, r22
 cba:	11 24       	eor	r1, r1
 cbc:	30 19       	sub	r19, r0
 cbe:	30 5d       	subi	r19, 0xD0	; 208
 cc0:	31 93       	st	Z+, r19
 cc2:	de f6       	brtc	.-74     	; 0xc7a <__ultoa_invert+0xe>
 cc4:	cf 01       	movw	r24, r30
 cc6:	08 95       	ret
 cc8:	46 2f       	mov	r20, r22
 cca:	47 70       	andi	r20, 0x07	; 7
 ccc:	40 5d       	subi	r20, 0xD0	; 208
 cce:	41 93       	st	Z+, r20
 cd0:	b3 e0       	ldi	r27, 0x03	; 3
 cd2:	0f d0       	rcall	.+30     	; 0xcf2 <__ultoa_invert+0x86>
 cd4:	c9 f7       	brne	.-14     	; 0xcc8 <__ultoa_invert+0x5c>
 cd6:	f6 cf       	rjmp	.-20     	; 0xcc4 <__ultoa_invert+0x58>
 cd8:	46 2f       	mov	r20, r22
 cda:	4f 70       	andi	r20, 0x0F	; 15
 cdc:	40 5d       	subi	r20, 0xD0	; 208
 cde:	4a 33       	cpi	r20, 0x3A	; 58
 ce0:	18 f0       	brcs	.+6      	; 0xce8 <__ultoa_invert+0x7c>
 ce2:	49 5d       	subi	r20, 0xD9	; 217
 ce4:	31 fd       	sbrc	r19, 1
 ce6:	40 52       	subi	r20, 0x20	; 32
 ce8:	41 93       	st	Z+, r20
 cea:	02 d0       	rcall	.+4      	; 0xcf0 <__ultoa_invert+0x84>
 cec:	a9 f7       	brne	.-22     	; 0xcd8 <__ultoa_invert+0x6c>
 cee:	ea cf       	rjmp	.-44     	; 0xcc4 <__ultoa_invert+0x58>
 cf0:	b4 e0       	ldi	r27, 0x04	; 4
 cf2:	a6 95       	lsr	r26
 cf4:	97 95       	ror	r25
 cf6:	87 95       	ror	r24
 cf8:	77 95       	ror	r23
 cfa:	67 95       	ror	r22
 cfc:	ba 95       	dec	r27
 cfe:	c9 f7       	brne	.-14     	; 0xcf2 <__ultoa_invert+0x86>
 d00:	00 97       	sbiw	r24, 0x00	; 0
 d02:	61 05       	cpc	r22, r1
 d04:	71 05       	cpc	r23, r1
 d06:	08 95       	ret
 d08:	9b 01       	movw	r18, r22
 d0a:	ac 01       	movw	r20, r24
 d0c:	0a 2e       	mov	r0, r26
 d0e:	06 94       	lsr	r0
 d10:	57 95       	ror	r21
 d12:	47 95       	ror	r20
 d14:	37 95       	ror	r19
 d16:	27 95       	ror	r18
 d18:	ba 95       	dec	r27
 d1a:	c9 f7       	brne	.-14     	; 0xd0e <__ultoa_invert+0xa2>
 d1c:	62 0f       	add	r22, r18
 d1e:	73 1f       	adc	r23, r19
 d20:	84 1f       	adc	r24, r20
 d22:	95 1f       	adc	r25, r21
 d24:	a0 1d       	adc	r26, r0
 d26:	08 95       	ret

00000d28 <__prologue_saves__>:
 d28:	2f 92       	push	r2
 d2a:	3f 92       	push	r3
 d2c:	4f 92       	push	r4
 d2e:	5f 92       	push	r5
 d30:	6f 92       	push	r6
 d32:	7f 92       	push	r7
 d34:	8f 92       	push	r8
 d36:	9f 92       	push	r9
 d38:	af 92       	push	r10
 d3a:	bf 92       	push	r11
 d3c:	cf 92       	push	r12
 d3e:	df 92       	push	r13
 d40:	ef 92       	push	r14
 d42:	ff 92       	push	r15
 d44:	0f 93       	push	r16
 d46:	1f 93       	push	r17
 d48:	cf 93       	push	r28
 d4a:	df 93       	push	r29
 d4c:	cd b7       	in	r28, 0x3d	; 61
 d4e:	de b7       	in	r29, 0x3e	; 62
 d50:	ca 1b       	sub	r28, r26
 d52:	db 0b       	sbc	r29, r27
 d54:	0f b6       	in	r0, 0x3f	; 63
 d56:	f8 94       	cli
 d58:	de bf       	out	0x3e, r29	; 62
 d5a:	0f be       	out	0x3f, r0	; 63
 d5c:	cd bf       	out	0x3d, r28	; 61
 d5e:	09 94       	ijmp

00000d60 <__epilogue_restores__>:
 d60:	2a 88       	ldd	r2, Y+18	; 0x12
 d62:	39 88       	ldd	r3, Y+17	; 0x11
 d64:	48 88       	ldd	r4, Y+16	; 0x10
 d66:	5f 84       	ldd	r5, Y+15	; 0x0f
 d68:	6e 84       	ldd	r6, Y+14	; 0x0e
 d6a:	7d 84       	ldd	r7, Y+13	; 0x0d
 d6c:	8c 84       	ldd	r8, Y+12	; 0x0c
 d6e:	9b 84       	ldd	r9, Y+11	; 0x0b
 d70:	aa 84       	ldd	r10, Y+10	; 0x0a
 d72:	b9 84       	ldd	r11, Y+9	; 0x09
 d74:	c8 84       	ldd	r12, Y+8	; 0x08
 d76:	df 80       	ldd	r13, Y+7	; 0x07
 d78:	ee 80       	ldd	r14, Y+6	; 0x06
 d7a:	fd 80       	ldd	r15, Y+5	; 0x05
 d7c:	0c 81       	ldd	r16, Y+4	; 0x04
 d7e:	1b 81       	ldd	r17, Y+3	; 0x03
 d80:	aa 81       	ldd	r26, Y+2	; 0x02
 d82:	b9 81       	ldd	r27, Y+1	; 0x01
 d84:	ce 0f       	add	r28, r30
 d86:	d1 1d       	adc	r29, r1
 d88:	0f b6       	in	r0, 0x3f	; 63
 d8a:	f8 94       	cli
 d8c:	de bf       	out	0x3e, r29	; 62
 d8e:	0f be       	out	0x3f, r0	; 63
 d90:	cd bf       	out	0x3d, r28	; 61
 d92:	ed 01       	movw	r28, r26
 d94:	08 95       	ret

00000d96 <_exit>:
 d96:	f8 94       	cli

00000d98 <__stop_program>:
 d98:	ff cf       	rjmp	.-2      	; 0xd98 <__stop_program>
